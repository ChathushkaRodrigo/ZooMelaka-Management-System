{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _textTransform = require('./parsing/textTransform');\n\nvar _TextBounds = require('./TextBounds');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar TextContainer = function () {\n  function TextContainer(text, parent, bounds) {\n    _classCallCheck(this, TextContainer);\n\n    this.text = text;\n    this.parent = parent;\n    this.bounds = bounds;\n  }\n\n  _createClass(TextContainer, null, [{\n    key: 'fromTextNode',\n    value: function fromTextNode(node, parent) {\n      var text = transform(node.data, parent.style.textTransform);\n      return new TextContainer(text, parent, (0, _TextBounds.parseTextBounds)(text, parent, node));\n    }\n  }]);\n\n  return TextContainer;\n}();\n\nexports.default = TextContainer;\nvar CAPITALIZE = /(^|\\s|:|-|\\(|\\))([a-z])/g;\n\nvar transform = function transform(text, _transform) {\n  switch (_transform) {\n    case _textTransform.TEXT_TRANSFORM.LOWERCASE:\n      return text.toLowerCase();\n\n    case _textTransform.TEXT_TRANSFORM.CAPITALIZE:\n      return text.replace(CAPITALIZE, capitalize);\n\n    case _textTransform.TEXT_TRANSFORM.UPPERCASE:\n      return text.toUpperCase();\n\n    default:\n      return text;\n  }\n};\n\nfunction capitalize(m, p1, p2) {\n  if (m.length > 0) {\n    return p1 + p2.toUpperCase();\n  }\n\n  return m;\n}","map":{"version":3,"sources":["/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/node_modules/react-to-pdf/node_modules/html2canvas/dist/npm/TextContainer.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_textTransform","require","_TextBounds","_classCallCheck","instance","TypeError","TextContainer","text","parent","bounds","fromTextNode","node","transform","data","style","textTransform","parseTextBounds","default","CAPITALIZE","_transform","TEXT_TRANSFORM","LOWERCASE","toLowerCase","replace","capitalize","UPPERCASE","toUpperCase","m","p1","p2"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _textTransform = require('./parsing/textTransform');\n\nvar _TextBounds = require('./TextBounds');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TextContainer = function () {\n    function TextContainer(text, parent, bounds) {\n        _classCallCheck(this, TextContainer);\n\n        this.text = text;\n        this.parent = parent;\n        this.bounds = bounds;\n    }\n\n    _createClass(TextContainer, null, [{\n        key: 'fromTextNode',\n        value: function fromTextNode(node, parent) {\n            var text = transform(node.data, parent.style.textTransform);\n            return new TextContainer(text, parent, (0, _TextBounds.parseTextBounds)(text, parent, node));\n        }\n    }]);\n\n    return TextContainer;\n}();\n\nexports.default = TextContainer;\n\n\nvar CAPITALIZE = /(^|\\s|:|-|\\(|\\))([a-z])/g;\n\nvar transform = function transform(text, _transform) {\n    switch (_transform) {\n        case _textTransform.TEXT_TRANSFORM.LOWERCASE:\n            return text.toLowerCase();\n        case _textTransform.TEXT_TRANSFORM.CAPITALIZE:\n            return text.replace(CAPITALIZE, capitalize);\n        case _textTransform.TEXT_TRANSFORM.UPPERCASE:\n            return text.toUpperCase();\n        default:\n            return text;\n    }\n};\n\nfunction capitalize(m, p1, p2) {\n    if (m.length > 0) {\n        return p1 + p2.toUpperCase();\n    }\n\n    return m;\n}"]},"metadata":{},"sourceType":"script"}