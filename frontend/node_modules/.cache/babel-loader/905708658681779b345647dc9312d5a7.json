{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _Path = require('../drawing/Path');\n\nvar _textDecoration = require('../parsing/textDecoration');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar addColorStops = function addColorStops(gradient, canvasGradient) {\n  var maxStop = Math.max.apply(null, gradient.colorStops.map(function (colorStop) {\n    return colorStop.stop;\n  }));\n  var f = 1 / Math.max(1, maxStop);\n  gradient.colorStops.forEach(function (colorStop) {\n    canvasGradient.addColorStop(f * colorStop.stop, colorStop.color.toString());\n  });\n};\n\nvar CanvasRenderer = function () {\n  function CanvasRenderer(canvas) {\n    _classCallCheck(this, CanvasRenderer);\n\n    this.canvas = canvas ? canvas : document.createElement('canvas');\n  }\n\n  _createClass(CanvasRenderer, [{\n    key: 'render',\n    value: function render(options) {\n      this.ctx = this.canvas.getContext('2d');\n      this.options = options;\n      this.canvas.width = Math.floor(options.width * options.scale);\n      this.canvas.height = Math.floor(options.height * options.scale);\n      this.canvas.style.width = options.width + 'px';\n      this.canvas.style.height = options.height + 'px';\n      this.ctx.scale(this.options.scale, this.options.scale);\n      this.ctx.translate(-options.x, -options.y);\n      this.ctx.textBaseline = 'bottom';\n      options.logger.log('Canvas renderer initialized (' + options.width + 'x' + options.height + ' at ' + options.x + ',' + options.y + ') with scale ' + this.options.scale);\n    }\n  }, {\n    key: 'clip',\n    value: function clip(clipPaths, callback) {\n      var _this = this;\n\n      if (clipPaths.length) {\n        this.ctx.save();\n        clipPaths.forEach(function (path) {\n          _this.path(path);\n\n          _this.ctx.clip();\n        });\n      }\n\n      callback();\n\n      if (clipPaths.length) {\n        this.ctx.restore();\n      }\n    }\n  }, {\n    key: 'drawImage',\n    value: function drawImage(image, source, destination) {\n      this.ctx.drawImage(image, source.left, source.top, source.width, source.height, destination.left, destination.top, destination.width, destination.height);\n    }\n  }, {\n    key: 'drawShape',\n    value: function drawShape(path, color) {\n      this.path(path);\n      this.ctx.fillStyle = color.toString();\n      this.ctx.fill();\n    }\n  }, {\n    key: 'fill',\n    value: function fill(color) {\n      this.ctx.fillStyle = color.toString();\n      this.ctx.fill();\n    }\n  }, {\n    key: 'getTarget',\n    value: function getTarget() {\n      this.canvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return Promise.resolve(this.canvas);\n    }\n  }, {\n    key: 'path',\n    value: function path(_path) {\n      var _this2 = this;\n\n      this.ctx.beginPath();\n\n      if (Array.isArray(_path)) {\n        _path.forEach(function (point, index) {\n          var start = point.type === _Path.PATH.VECTOR ? point : point.start;\n\n          if (index === 0) {\n            _this2.ctx.moveTo(start.x, start.y);\n          } else {\n            _this2.ctx.lineTo(start.x, start.y);\n          }\n\n          if (point.type === _Path.PATH.BEZIER_CURVE) {\n            _this2.ctx.bezierCurveTo(point.startControl.x, point.startControl.y, point.endControl.x, point.endControl.y, point.end.x, point.end.y);\n          }\n        });\n      } else {\n        this.ctx.arc(_path.x + _path.radius, _path.y + _path.radius, _path.radius, 0, Math.PI * 2, true);\n      }\n\n      this.ctx.closePath();\n    }\n  }, {\n    key: 'rectangle',\n    value: function rectangle(x, y, width, height, color) {\n      this.ctx.fillStyle = color.toString();\n      this.ctx.fillRect(x, y, width, height);\n    }\n  }, {\n    key: 'renderLinearGradient',\n    value: function renderLinearGradient(bounds, gradient) {\n      var linearGradient = this.ctx.createLinearGradient(bounds.left + gradient.direction.x1, bounds.top + gradient.direction.y1, bounds.left + gradient.direction.x0, bounds.top + gradient.direction.y0);\n      addColorStops(gradient, linearGradient);\n      this.ctx.fillStyle = linearGradient;\n      this.ctx.fillRect(bounds.left, bounds.top, bounds.width, bounds.height);\n    }\n  }, {\n    key: 'renderRadialGradient',\n    value: function renderRadialGradient(bounds, gradient) {\n      var _this3 = this;\n\n      var x = bounds.left + gradient.center.x;\n      var y = bounds.top + gradient.center.y;\n      var radialGradient = this.ctx.createRadialGradient(x, y, 0, x, y, gradient.radius.x);\n\n      if (!radialGradient) {\n        return;\n      }\n\n      addColorStops(gradient, radialGradient);\n      this.ctx.fillStyle = radialGradient;\n\n      if (gradient.radius.x !== gradient.radius.y) {\n        // transforms for elliptical radial gradient\n        var midX = bounds.left + 0.5 * bounds.width;\n        var midY = bounds.top + 0.5 * bounds.height;\n        var f = gradient.radius.y / gradient.radius.x;\n        var invF = 1 / f;\n        this.transform(midX, midY, [1, 0, 0, f, 0, 0], function () {\n          return _this3.ctx.fillRect(bounds.left, invF * (bounds.top - midY) + midY, bounds.width, bounds.height * invF);\n        });\n      } else {\n        this.ctx.fillRect(bounds.left, bounds.top, bounds.width, bounds.height);\n      }\n    }\n  }, {\n    key: 'renderRepeat',\n    value: function renderRepeat(path, image, imageSize, offsetX, offsetY) {\n      this.path(path);\n      this.ctx.fillStyle = this.ctx.createPattern(this.resizeImage(image, imageSize), 'repeat');\n      this.ctx.translate(offsetX, offsetY);\n      this.ctx.fill();\n      this.ctx.translate(-offsetX, -offsetY);\n    }\n  }, {\n    key: 'renderTextNode',\n    value: function renderTextNode(textBounds, color, font, textDecoration, textShadows) {\n      var _this4 = this;\n\n      this.ctx.font = [font.fontStyle, font.fontVariant, font.fontWeight, font.fontSize, font.fontFamily].join(' ');\n      textBounds.forEach(function (text) {\n        _this4.ctx.fillStyle = color.toString();\n\n        if (textShadows && text.text.trim().length) {\n          textShadows.slice(0).reverse().forEach(function (textShadow) {\n            _this4.ctx.shadowColor = textShadow.color.toString();\n            _this4.ctx.shadowOffsetX = textShadow.offsetX * _this4.options.scale;\n            _this4.ctx.shadowOffsetY = textShadow.offsetY * _this4.options.scale;\n            _this4.ctx.shadowBlur = textShadow.blur;\n\n            _this4.ctx.fillText(text.text, text.bounds.left, text.bounds.top + text.bounds.height);\n          });\n        } else {\n          _this4.ctx.fillText(text.text, text.bounds.left, text.bounds.top + text.bounds.height);\n        }\n\n        if (textDecoration !== null) {\n          var textDecorationColor = textDecoration.textDecorationColor || color;\n          textDecoration.textDecorationLine.forEach(function (textDecorationLine) {\n            switch (textDecorationLine) {\n              case _textDecoration.TEXT_DECORATION_LINE.UNDERLINE:\n                // Draws a line at the baseline of the font\n                // TODO As some browsers display the line as more than 1px if the font-size is big,\n                // need to take that into account both in position and size\n                var _options$fontMetrics$ = _this4.options.fontMetrics.getMetrics(font),\n                    baseline = _options$fontMetrics$.baseline;\n\n                _this4.rectangle(text.bounds.left, Math.round(text.bounds.top + baseline), text.bounds.width, 1, textDecorationColor);\n\n                break;\n\n              case _textDecoration.TEXT_DECORATION_LINE.OVERLINE:\n                _this4.rectangle(text.bounds.left, Math.round(text.bounds.top), text.bounds.width, 1, textDecorationColor);\n\n                break;\n\n              case _textDecoration.TEXT_DECORATION_LINE.LINE_THROUGH:\n                // TODO try and find exact position for line-through\n                var _options$fontMetrics$2 = _this4.options.fontMetrics.getMetrics(font),\n                    middle = _options$fontMetrics$2.middle;\n\n                _this4.rectangle(text.bounds.left, Math.ceil(text.bounds.top + middle), text.bounds.width, 1, textDecorationColor);\n\n                break;\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: 'resizeImage',\n    value: function resizeImage(image, size) {\n      if (image.width === size.width && image.height === size.height) {\n        return image;\n      }\n\n      var canvas = this.canvas.ownerDocument.createElement('canvas');\n      canvas.width = size.width;\n      canvas.height = size.height;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, size.width, size.height);\n      return canvas;\n    }\n  }, {\n    key: 'setOpacity',\n    value: function setOpacity(opacity) {\n      this.ctx.globalAlpha = opacity;\n    }\n  }, {\n    key: 'transform',\n    value: function transform(offsetX, offsetY, matrix, callback) {\n      this.ctx.save();\n      this.ctx.translate(offsetX, offsetY);\n      this.ctx.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n      this.ctx.translate(-offsetX, -offsetY);\n      callback();\n      this.ctx.restore();\n    }\n  }]);\n\n  return CanvasRenderer;\n}();\n\nexports.default = CanvasRenderer;","map":{"version":3,"sources":["/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/node_modules/react-to-pdf/node_modules/html2canvas/dist/npm/renderer/CanvasRenderer.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_Path","require","_textDecoration","_classCallCheck","instance","TypeError","addColorStops","gradient","canvasGradient","maxStop","Math","max","apply","colorStops","map","colorStop","stop","f","forEach","addColorStop","color","toString","CanvasRenderer","canvas","document","createElement","render","options","ctx","getContext","width","floor","scale","height","style","translate","x","y","textBaseline","logger","log","clip","clipPaths","callback","_this","save","path","restore","drawImage","image","source","destination","left","top","drawShape","fillStyle","fill","getTarget","setTransform","Promise","resolve","_path","_this2","beginPath","Array","isArray","point","index","start","type","PATH","VECTOR","moveTo","lineTo","BEZIER_CURVE","bezierCurveTo","startControl","endControl","end","arc","radius","PI","closePath","rectangle","fillRect","renderLinearGradient","bounds","linearGradient","createLinearGradient","direction","x1","y1","x0","y0","renderRadialGradient","_this3","center","radialGradient","createRadialGradient","midX","midY","invF","transform","renderRepeat","imageSize","offsetX","offsetY","createPattern","resizeImage","renderTextNode","textBounds","font","textDecoration","textShadows","_this4","fontStyle","fontVariant","fontWeight","fontSize","fontFamily","join","text","trim","slice","reverse","textShadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","blur","fillText","textDecorationColor","textDecorationLine","TEXT_DECORATION_LINE","UNDERLINE","_options$fontMetrics$","fontMetrics","getMetrics","baseline","round","OVERLINE","LINE_THROUGH","_options$fontMetrics$2","middle","ceil","size","ownerDocument","setOpacity","opacity","globalAlpha","matrix","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Path = require('../drawing/Path');\n\nvar _textDecoration = require('../parsing/textDecoration');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar addColorStops = function addColorStops(gradient, canvasGradient) {\n    var maxStop = Math.max.apply(null, gradient.colorStops.map(function (colorStop) {\n        return colorStop.stop;\n    }));\n    var f = 1 / Math.max(1, maxStop);\n    gradient.colorStops.forEach(function (colorStop) {\n        canvasGradient.addColorStop(f * colorStop.stop, colorStop.color.toString());\n    });\n};\n\nvar CanvasRenderer = function () {\n    function CanvasRenderer(canvas) {\n        _classCallCheck(this, CanvasRenderer);\n\n        this.canvas = canvas ? canvas : document.createElement('canvas');\n    }\n\n    _createClass(CanvasRenderer, [{\n        key: 'render',\n        value: function render(options) {\n            this.ctx = this.canvas.getContext('2d');\n            this.options = options;\n            this.canvas.width = Math.floor(options.width * options.scale);\n            this.canvas.height = Math.floor(options.height * options.scale);\n            this.canvas.style.width = options.width + 'px';\n            this.canvas.style.height = options.height + 'px';\n\n            this.ctx.scale(this.options.scale, this.options.scale);\n            this.ctx.translate(-options.x, -options.y);\n            this.ctx.textBaseline = 'bottom';\n            options.logger.log('Canvas renderer initialized (' + options.width + 'x' + options.height + ' at ' + options.x + ',' + options.y + ') with scale ' + this.options.scale);\n        }\n    }, {\n        key: 'clip',\n        value: function clip(clipPaths, callback) {\n            var _this = this;\n\n            if (clipPaths.length) {\n                this.ctx.save();\n                clipPaths.forEach(function (path) {\n                    _this.path(path);\n                    _this.ctx.clip();\n                });\n            }\n\n            callback();\n\n            if (clipPaths.length) {\n                this.ctx.restore();\n            }\n        }\n    }, {\n        key: 'drawImage',\n        value: function drawImage(image, source, destination) {\n            this.ctx.drawImage(image, source.left, source.top, source.width, source.height, destination.left, destination.top, destination.width, destination.height);\n        }\n    }, {\n        key: 'drawShape',\n        value: function drawShape(path, color) {\n            this.path(path);\n            this.ctx.fillStyle = color.toString();\n            this.ctx.fill();\n        }\n    }, {\n        key: 'fill',\n        value: function fill(color) {\n            this.ctx.fillStyle = color.toString();\n            this.ctx.fill();\n        }\n    }, {\n        key: 'getTarget',\n        value: function getTarget() {\n            this.canvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n            return Promise.resolve(this.canvas);\n        }\n    }, {\n        key: 'path',\n        value: function path(_path) {\n            var _this2 = this;\n\n            this.ctx.beginPath();\n            if (Array.isArray(_path)) {\n                _path.forEach(function (point, index) {\n                    var start = point.type === _Path.PATH.VECTOR ? point : point.start;\n                    if (index === 0) {\n                        _this2.ctx.moveTo(start.x, start.y);\n                    } else {\n                        _this2.ctx.lineTo(start.x, start.y);\n                    }\n\n                    if (point.type === _Path.PATH.BEZIER_CURVE) {\n                        _this2.ctx.bezierCurveTo(point.startControl.x, point.startControl.y, point.endControl.x, point.endControl.y, point.end.x, point.end.y);\n                    }\n                });\n            } else {\n                this.ctx.arc(_path.x + _path.radius, _path.y + _path.radius, _path.radius, 0, Math.PI * 2, true);\n            }\n\n            this.ctx.closePath();\n        }\n    }, {\n        key: 'rectangle',\n        value: function rectangle(x, y, width, height, color) {\n            this.ctx.fillStyle = color.toString();\n            this.ctx.fillRect(x, y, width, height);\n        }\n    }, {\n        key: 'renderLinearGradient',\n        value: function renderLinearGradient(bounds, gradient) {\n            var linearGradient = this.ctx.createLinearGradient(bounds.left + gradient.direction.x1, bounds.top + gradient.direction.y1, bounds.left + gradient.direction.x0, bounds.top + gradient.direction.y0);\n\n            addColorStops(gradient, linearGradient);\n            this.ctx.fillStyle = linearGradient;\n            this.ctx.fillRect(bounds.left, bounds.top, bounds.width, bounds.height);\n        }\n    }, {\n        key: 'renderRadialGradient',\n        value: function renderRadialGradient(bounds, gradient) {\n            var _this3 = this;\n\n            var x = bounds.left + gradient.center.x;\n            var y = bounds.top + gradient.center.y;\n\n            var radialGradient = this.ctx.createRadialGradient(x, y, 0, x, y, gradient.radius.x);\n            if (!radialGradient) {\n                return;\n            }\n\n            addColorStops(gradient, radialGradient);\n            this.ctx.fillStyle = radialGradient;\n\n            if (gradient.radius.x !== gradient.radius.y) {\n                // transforms for elliptical radial gradient\n                var midX = bounds.left + 0.5 * bounds.width;\n                var midY = bounds.top + 0.5 * bounds.height;\n                var f = gradient.radius.y / gradient.radius.x;\n                var invF = 1 / f;\n\n                this.transform(midX, midY, [1, 0, 0, f, 0, 0], function () {\n                    return _this3.ctx.fillRect(bounds.left, invF * (bounds.top - midY) + midY, bounds.width, bounds.height * invF);\n                });\n            } else {\n                this.ctx.fillRect(bounds.left, bounds.top, bounds.width, bounds.height);\n            }\n        }\n    }, {\n        key: 'renderRepeat',\n        value: function renderRepeat(path, image, imageSize, offsetX, offsetY) {\n            this.path(path);\n            this.ctx.fillStyle = this.ctx.createPattern(this.resizeImage(image, imageSize), 'repeat');\n            this.ctx.translate(offsetX, offsetY);\n            this.ctx.fill();\n            this.ctx.translate(-offsetX, -offsetY);\n        }\n    }, {\n        key: 'renderTextNode',\n        value: function renderTextNode(textBounds, color, font, textDecoration, textShadows) {\n            var _this4 = this;\n\n            this.ctx.font = [font.fontStyle, font.fontVariant, font.fontWeight, font.fontSize, font.fontFamily].join(' ');\n\n            textBounds.forEach(function (text) {\n                _this4.ctx.fillStyle = color.toString();\n                if (textShadows && text.text.trim().length) {\n                    textShadows.slice(0).reverse().forEach(function (textShadow) {\n                        _this4.ctx.shadowColor = textShadow.color.toString();\n                        _this4.ctx.shadowOffsetX = textShadow.offsetX * _this4.options.scale;\n                        _this4.ctx.shadowOffsetY = textShadow.offsetY * _this4.options.scale;\n                        _this4.ctx.shadowBlur = textShadow.blur;\n\n                        _this4.ctx.fillText(text.text, text.bounds.left, text.bounds.top + text.bounds.height);\n                    });\n                } else {\n                    _this4.ctx.fillText(text.text, text.bounds.left, text.bounds.top + text.bounds.height);\n                }\n\n                if (textDecoration !== null) {\n                    var textDecorationColor = textDecoration.textDecorationColor || color;\n                    textDecoration.textDecorationLine.forEach(function (textDecorationLine) {\n                        switch (textDecorationLine) {\n                            case _textDecoration.TEXT_DECORATION_LINE.UNDERLINE:\n                                // Draws a line at the baseline of the font\n                                // TODO As some browsers display the line as more than 1px if the font-size is big,\n                                // need to take that into account both in position and size\n                                var _options$fontMetrics$ = _this4.options.fontMetrics.getMetrics(font),\n                                    baseline = _options$fontMetrics$.baseline;\n\n                                _this4.rectangle(text.bounds.left, Math.round(text.bounds.top + baseline), text.bounds.width, 1, textDecorationColor);\n                                break;\n                            case _textDecoration.TEXT_DECORATION_LINE.OVERLINE:\n                                _this4.rectangle(text.bounds.left, Math.round(text.bounds.top), text.bounds.width, 1, textDecorationColor);\n                                break;\n                            case _textDecoration.TEXT_DECORATION_LINE.LINE_THROUGH:\n                                // TODO try and find exact position for line-through\n                                var _options$fontMetrics$2 = _this4.options.fontMetrics.getMetrics(font),\n                                    middle = _options$fontMetrics$2.middle;\n\n                                _this4.rectangle(text.bounds.left, Math.ceil(text.bounds.top + middle), text.bounds.width, 1, textDecorationColor);\n                                break;\n                        }\n                    });\n                }\n            });\n        }\n    }, {\n        key: 'resizeImage',\n        value: function resizeImage(image, size) {\n            if (image.width === size.width && image.height === size.height) {\n                return image;\n            }\n\n            var canvas = this.canvas.ownerDocument.createElement('canvas');\n            canvas.width = size.width;\n            canvas.height = size.height;\n            var ctx = canvas.getContext('2d');\n            ctx.drawImage(image, 0, 0, image.width, image.height, 0, 0, size.width, size.height);\n            return canvas;\n        }\n    }, {\n        key: 'setOpacity',\n        value: function setOpacity(opacity) {\n            this.ctx.globalAlpha = opacity;\n        }\n    }, {\n        key: 'transform',\n        value: function transform(offsetX, offsetY, matrix, callback) {\n            this.ctx.save();\n            this.ctx.translate(offsetX, offsetY);\n            this.ctx.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n            this.ctx.translate(-offsetX, -offsetY);\n\n            callback();\n\n            this.ctx.restore();\n        }\n    }]);\n\n    return CanvasRenderer;\n}();\n\nexports.default = CanvasRenderer;"]},"metadata":{},"sourceType":"script"}