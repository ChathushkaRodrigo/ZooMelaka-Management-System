{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseContent = exports.resolvePseudoContent = exports.popCounters = exports.parseCounterReset = exports.TOKEN_TYPE = exports.PSEUDO_CONTENT_ITEM_TYPE = undefined;\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _ListItem = require('./ListItem');\n\nvar _listStyle = require('./parsing/listStyle');\n\nvar PSEUDO_CONTENT_ITEM_TYPE = exports.PSEUDO_CONTENT_ITEM_TYPE = {\n  TEXT: 0,\n  IMAGE: 1\n};\nvar TOKEN_TYPE = exports.TOKEN_TYPE = {\n  STRING: 0,\n  ATTRIBUTE: 1,\n  URL: 2,\n  COUNTER: 3,\n  COUNTERS: 4,\n  OPENQUOTE: 5,\n  CLOSEQUOTE: 6\n};\n\nvar parseCounterReset = exports.parseCounterReset = function parseCounterReset(style, data) {\n  if (!style || !style.counterReset || style.counterReset === 'none') {\n    return [];\n  }\n\n  var counterNames = [];\n  var counterResets = style.counterReset.split(/\\s*,\\s*/);\n  var lenCounterResets = counterResets.length;\n\n  for (var i = 0; i < lenCounterResets; i++) {\n    var _counterResets$i$spli = counterResets[i].split(/\\s+/),\n        _counterResets$i$spli2 = _slicedToArray(_counterResets$i$spli, 2),\n        counterName = _counterResets$i$spli2[0],\n        initialValue = _counterResets$i$spli2[1];\n\n    counterNames.push(counterName);\n    var counter = data.counters[counterName];\n\n    if (!counter) {\n      counter = data.counters[counterName] = [];\n    }\n\n    counter.push(parseInt(initialValue || 0, 10));\n  }\n\n  return counterNames;\n};\n\nvar popCounters = exports.popCounters = function popCounters(counterNames, data) {\n  var lenCounters = counterNames.length;\n\n  for (var i = 0; i < lenCounters; i++) {\n    data.counters[counterNames[i]].pop();\n  }\n};\n\nvar resolvePseudoContent = exports.resolvePseudoContent = function resolvePseudoContent(node, style, data) {\n  if (!style || !style.content || style.content === 'none' || style.content === '-moz-alt-content' || style.display === 'none') {\n    return null;\n  }\n\n  var tokens = parseContent(style.content);\n  var len = tokens.length;\n  var contentItems = [];\n  var s = ''; // increment the counter (if there is a \"counter-increment\" declaration)\n\n  var counterIncrement = style.counterIncrement;\n\n  if (counterIncrement && counterIncrement !== 'none') {\n    var _counterIncrement$spl = counterIncrement.split(/\\s+/),\n        _counterIncrement$spl2 = _slicedToArray(_counterIncrement$spl, 2),\n        counterName = _counterIncrement$spl2[0],\n        incrementValue = _counterIncrement$spl2[1];\n\n    var counter = data.counters[counterName];\n\n    if (counter) {\n      counter[counter.length - 1] += incrementValue === undefined ? 1 : parseInt(incrementValue, 10);\n    }\n  } // build the content string\n\n\n  for (var i = 0; i < len; i++) {\n    var token = tokens[i];\n\n    switch (token.type) {\n      case TOKEN_TYPE.STRING:\n        s += token.value || '';\n        break;\n\n      case TOKEN_TYPE.ATTRIBUTE:\n        if (node instanceof HTMLElement && token.value) {\n          s += node.getAttribute(token.value) || '';\n        }\n\n        break;\n\n      case TOKEN_TYPE.COUNTER:\n        var _counter = data.counters[token.name || ''];\n\n        if (_counter) {\n          s += formatCounterValue([_counter[_counter.length - 1]], '', token.format);\n        }\n\n        break;\n\n      case TOKEN_TYPE.COUNTERS:\n        var _counters = data.counters[token.name || ''];\n\n        if (_counters) {\n          s += formatCounterValue(_counters, token.glue, token.format);\n        }\n\n        break;\n\n      case TOKEN_TYPE.OPENQUOTE:\n        s += getQuote(style, true, data.quoteDepth);\n        data.quoteDepth++;\n        break;\n\n      case TOKEN_TYPE.CLOSEQUOTE:\n        data.quoteDepth--;\n        s += getQuote(style, false, data.quoteDepth);\n        break;\n\n      case TOKEN_TYPE.URL:\n        if (s) {\n          contentItems.push({\n            type: PSEUDO_CONTENT_ITEM_TYPE.TEXT,\n            value: s\n          });\n          s = '';\n        }\n\n        contentItems.push({\n          type: PSEUDO_CONTENT_ITEM_TYPE.IMAGE,\n          value: token.value || ''\n        });\n        break;\n    }\n  }\n\n  if (s) {\n    contentItems.push({\n      type: PSEUDO_CONTENT_ITEM_TYPE.TEXT,\n      value: s\n    });\n  }\n\n  return contentItems;\n};\n\nvar parseContent = exports.parseContent = function parseContent(content, cache) {\n  if (cache && cache[content]) {\n    return cache[content];\n  }\n\n  var tokens = [];\n  var len = content.length;\n  var isString = false;\n  var isEscaped = false;\n  var isFunction = false;\n  var str = '';\n  var functionName = '';\n  var args = [];\n\n  for (var i = 0; i < len; i++) {\n    var c = content.charAt(i);\n\n    switch (c) {\n      case \"'\":\n      case '\"':\n        if (isEscaped) {\n          str += c;\n        } else {\n          isString = !isString;\n\n          if (!isFunction && !isString) {\n            tokens.push({\n              type: TOKEN_TYPE.STRING,\n              value: str\n            });\n            str = '';\n          }\n        }\n\n        break;\n\n      case '\\\\':\n        if (isEscaped) {\n          str += c;\n          isEscaped = false;\n        } else {\n          isEscaped = true;\n        }\n\n        break;\n\n      case '(':\n        if (isString) {\n          str += c;\n        } else {\n          isFunction = true;\n          functionName = str;\n          str = '';\n          args = [];\n        }\n\n        break;\n\n      case ')':\n        if (isString) {\n          str += c;\n        } else if (isFunction) {\n          if (str) {\n            args.push(str);\n          }\n\n          switch (functionName) {\n            case 'attr':\n              if (args.length > 0) {\n                tokens.push({\n                  type: TOKEN_TYPE.ATTRIBUTE,\n                  value: args[0]\n                });\n              }\n\n              break;\n\n            case 'counter':\n              if (args.length > 0) {\n                var counter = {\n                  type: TOKEN_TYPE.COUNTER,\n                  name: args[0]\n                };\n\n                if (args.length > 1) {\n                  counter.format = args[1];\n                }\n\n                tokens.push(counter);\n              }\n\n              break;\n\n            case 'counters':\n              if (args.length > 0) {\n                var _counters2 = {\n                  type: TOKEN_TYPE.COUNTERS,\n                  name: args[0]\n                };\n\n                if (args.length > 1) {\n                  _counters2.glue = args[1];\n                }\n\n                if (args.length > 2) {\n                  _counters2.format = args[2];\n                }\n\n                tokens.push(_counters2);\n              }\n\n              break;\n\n            case 'url':\n              if (args.length > 0) {\n                tokens.push({\n                  type: TOKEN_TYPE.URL,\n                  value: args[0]\n                });\n              }\n\n              break;\n          }\n\n          isFunction = false;\n          str = '';\n        }\n\n        break;\n\n      case ',':\n        if (isString) {\n          str += c;\n        } else if (isFunction) {\n          args.push(str);\n          str = '';\n        }\n\n        break;\n\n      case ' ':\n      case '\\t':\n        if (isString) {\n          str += c;\n        } else if (str) {\n          addOtherToken(tokens, str);\n          str = '';\n        }\n\n        break;\n\n      default:\n        str += c;\n    }\n\n    if (c !== '\\\\') {\n      isEscaped = false;\n    }\n  }\n\n  if (str) {\n    addOtherToken(tokens, str);\n  }\n\n  if (cache) {\n    cache[content] = tokens;\n  }\n\n  return tokens;\n};\n\nvar addOtherToken = function addOtherToken(tokens, identifier) {\n  switch (identifier) {\n    case 'open-quote':\n      tokens.push({\n        type: TOKEN_TYPE.OPENQUOTE\n      });\n      break;\n\n    case 'close-quote':\n      tokens.push({\n        type: TOKEN_TYPE.CLOSEQUOTE\n      });\n      break;\n  }\n};\n\nvar getQuote = function getQuote(style, isOpening, quoteDepth) {\n  var quotes = style.quotes ? style.quotes.split(/\\s+/) : [\"'\\\"'\", \"'\\\"'\"];\n  var idx = quoteDepth * 2;\n\n  if (idx >= quotes.length) {\n    idx = quotes.length - 2;\n  }\n\n  if (!isOpening) {\n    ++idx;\n  }\n\n  return quotes[idx].replace(/^[\"']|[\"']$/g, '');\n};\n\nvar formatCounterValue = function formatCounterValue(counter, glue, format) {\n  var len = counter.length;\n  var result = '';\n\n  for (var i = 0; i < len; i++) {\n    if (i > 0) {\n      result += glue || '';\n    }\n\n    result += (0, _ListItem.createCounterText)(counter[i], (0, _listStyle.parseListStyleType)(format || 'decimal'), false);\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/node_modules/react-to-pdf/node_modules/html2canvas/dist/npm/PseudoNodeContent.js"],"names":["Object","defineProperty","exports","value","parseContent","resolvePseudoContent","popCounters","parseCounterReset","TOKEN_TYPE","PSEUDO_CONTENT_ITEM_TYPE","undefined","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_ListItem","require","_listStyle","TEXT","IMAGE","STRING","ATTRIBUTE","URL","COUNTER","COUNTERS","OPENQUOTE","CLOSEQUOTE","style","data","counterReset","counterNames","counterResets","split","lenCounterResets","_counterResets$i$spli","_counterResets$i$spli2","counterName","initialValue","counter","counters","parseInt","lenCounters","pop","node","content","display","tokens","len","contentItems","s","counterIncrement","_counterIncrement$spl","_counterIncrement$spl2","incrementValue","token","type","HTMLElement","getAttribute","_counter","name","formatCounterValue","format","_counters","glue","getQuote","quoteDepth","cache","isString","isEscaped","isFunction","str","functionName","args","c","charAt","_counters2","addOtherToken","identifier","isOpening","quotes","idx","replace","result","createCounterText","parseListStyleType"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseContent = exports.resolvePseudoContent = exports.popCounters = exports.parseCounterReset = exports.TOKEN_TYPE = exports.PSEUDO_CONTENT_ITEM_TYPE = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _ListItem = require('./ListItem');\n\nvar _listStyle = require('./parsing/listStyle');\n\nvar PSEUDO_CONTENT_ITEM_TYPE = exports.PSEUDO_CONTENT_ITEM_TYPE = {\n    TEXT: 0,\n    IMAGE: 1\n};\n\nvar TOKEN_TYPE = exports.TOKEN_TYPE = {\n    STRING: 0,\n    ATTRIBUTE: 1,\n    URL: 2,\n    COUNTER: 3,\n    COUNTERS: 4,\n    OPENQUOTE: 5,\n    CLOSEQUOTE: 6\n};\n\nvar parseCounterReset = exports.parseCounterReset = function parseCounterReset(style, data) {\n    if (!style || !style.counterReset || style.counterReset === 'none') {\n        return [];\n    }\n\n    var counterNames = [];\n    var counterResets = style.counterReset.split(/\\s*,\\s*/);\n    var lenCounterResets = counterResets.length;\n\n    for (var i = 0; i < lenCounterResets; i++) {\n        var _counterResets$i$spli = counterResets[i].split(/\\s+/),\n            _counterResets$i$spli2 = _slicedToArray(_counterResets$i$spli, 2),\n            counterName = _counterResets$i$spli2[0],\n            initialValue = _counterResets$i$spli2[1];\n\n        counterNames.push(counterName);\n        var counter = data.counters[counterName];\n        if (!counter) {\n            counter = data.counters[counterName] = [];\n        }\n        counter.push(parseInt(initialValue || 0, 10));\n    }\n\n    return counterNames;\n};\n\nvar popCounters = exports.popCounters = function popCounters(counterNames, data) {\n    var lenCounters = counterNames.length;\n    for (var i = 0; i < lenCounters; i++) {\n        data.counters[counterNames[i]].pop();\n    }\n};\n\nvar resolvePseudoContent = exports.resolvePseudoContent = function resolvePseudoContent(node, style, data) {\n    if (!style || !style.content || style.content === 'none' || style.content === '-moz-alt-content' || style.display === 'none') {\n        return null;\n    }\n\n    var tokens = parseContent(style.content);\n\n    var len = tokens.length;\n    var contentItems = [];\n    var s = '';\n\n    // increment the counter (if there is a \"counter-increment\" declaration)\n    var counterIncrement = style.counterIncrement;\n    if (counterIncrement && counterIncrement !== 'none') {\n        var _counterIncrement$spl = counterIncrement.split(/\\s+/),\n            _counterIncrement$spl2 = _slicedToArray(_counterIncrement$spl, 2),\n            counterName = _counterIncrement$spl2[0],\n            incrementValue = _counterIncrement$spl2[1];\n\n        var counter = data.counters[counterName];\n        if (counter) {\n            counter[counter.length - 1] += incrementValue === undefined ? 1 : parseInt(incrementValue, 10);\n        }\n    }\n\n    // build the content string\n    for (var i = 0; i < len; i++) {\n        var token = tokens[i];\n        switch (token.type) {\n            case TOKEN_TYPE.STRING:\n                s += token.value || '';\n                break;\n\n            case TOKEN_TYPE.ATTRIBUTE:\n                if (node instanceof HTMLElement && token.value) {\n                    s += node.getAttribute(token.value) || '';\n                }\n                break;\n\n            case TOKEN_TYPE.COUNTER:\n                var _counter = data.counters[token.name || ''];\n                if (_counter) {\n                    s += formatCounterValue([_counter[_counter.length - 1]], '', token.format);\n                }\n                break;\n\n            case TOKEN_TYPE.COUNTERS:\n                var _counters = data.counters[token.name || ''];\n                if (_counters) {\n                    s += formatCounterValue(_counters, token.glue, token.format);\n                }\n                break;\n\n            case TOKEN_TYPE.OPENQUOTE:\n                s += getQuote(style, true, data.quoteDepth);\n                data.quoteDepth++;\n                break;\n\n            case TOKEN_TYPE.CLOSEQUOTE:\n                data.quoteDepth--;\n                s += getQuote(style, false, data.quoteDepth);\n                break;\n\n            case TOKEN_TYPE.URL:\n                if (s) {\n                    contentItems.push({ type: PSEUDO_CONTENT_ITEM_TYPE.TEXT, value: s });\n                    s = '';\n                }\n                contentItems.push({ type: PSEUDO_CONTENT_ITEM_TYPE.IMAGE, value: token.value || '' });\n                break;\n        }\n    }\n\n    if (s) {\n        contentItems.push({ type: PSEUDO_CONTENT_ITEM_TYPE.TEXT, value: s });\n    }\n\n    return contentItems;\n};\n\nvar parseContent = exports.parseContent = function parseContent(content, cache) {\n    if (cache && cache[content]) {\n        return cache[content];\n    }\n\n    var tokens = [];\n    var len = content.length;\n\n    var isString = false;\n    var isEscaped = false;\n    var isFunction = false;\n    var str = '';\n    var functionName = '';\n    var args = [];\n\n    for (var i = 0; i < len; i++) {\n        var c = content.charAt(i);\n\n        switch (c) {\n            case \"'\":\n            case '\"':\n                if (isEscaped) {\n                    str += c;\n                } else {\n                    isString = !isString;\n                    if (!isFunction && !isString) {\n                        tokens.push({ type: TOKEN_TYPE.STRING, value: str });\n                        str = '';\n                    }\n                }\n                break;\n\n            case '\\\\':\n                if (isEscaped) {\n                    str += c;\n                    isEscaped = false;\n                } else {\n                    isEscaped = true;\n                }\n                break;\n\n            case '(':\n                if (isString) {\n                    str += c;\n                } else {\n                    isFunction = true;\n                    functionName = str;\n                    str = '';\n                    args = [];\n                }\n                break;\n\n            case ')':\n                if (isString) {\n                    str += c;\n                } else if (isFunction) {\n                    if (str) {\n                        args.push(str);\n                    }\n\n                    switch (functionName) {\n                        case 'attr':\n                            if (args.length > 0) {\n                                tokens.push({ type: TOKEN_TYPE.ATTRIBUTE, value: args[0] });\n                            }\n                            break;\n\n                        case 'counter':\n                            if (args.length > 0) {\n                                var counter = {\n                                    type: TOKEN_TYPE.COUNTER,\n                                    name: args[0]\n                                };\n                                if (args.length > 1) {\n                                    counter.format = args[1];\n                                }\n                                tokens.push(counter);\n                            }\n                            break;\n\n                        case 'counters':\n                            if (args.length > 0) {\n                                var _counters2 = {\n                                    type: TOKEN_TYPE.COUNTERS,\n                                    name: args[0]\n                                };\n                                if (args.length > 1) {\n                                    _counters2.glue = args[1];\n                                }\n                                if (args.length > 2) {\n                                    _counters2.format = args[2];\n                                }\n                                tokens.push(_counters2);\n                            }\n                            break;\n\n                        case 'url':\n                            if (args.length > 0) {\n                                tokens.push({ type: TOKEN_TYPE.URL, value: args[0] });\n                            }\n                            break;\n                    }\n\n                    isFunction = false;\n                    str = '';\n                }\n                break;\n\n            case ',':\n                if (isString) {\n                    str += c;\n                } else if (isFunction) {\n                    args.push(str);\n                    str = '';\n                }\n                break;\n\n            case ' ':\n            case '\\t':\n                if (isString) {\n                    str += c;\n                } else if (str) {\n                    addOtherToken(tokens, str);\n                    str = '';\n                }\n                break;\n\n            default:\n                str += c;\n        }\n\n        if (c !== '\\\\') {\n            isEscaped = false;\n        }\n    }\n\n    if (str) {\n        addOtherToken(tokens, str);\n    }\n\n    if (cache) {\n        cache[content] = tokens;\n    }\n\n    return tokens;\n};\n\nvar addOtherToken = function addOtherToken(tokens, identifier) {\n    switch (identifier) {\n        case 'open-quote':\n            tokens.push({ type: TOKEN_TYPE.OPENQUOTE });\n            break;\n        case 'close-quote':\n            tokens.push({ type: TOKEN_TYPE.CLOSEQUOTE });\n            break;\n    }\n};\n\nvar getQuote = function getQuote(style, isOpening, quoteDepth) {\n    var quotes = style.quotes ? style.quotes.split(/\\s+/) : [\"'\\\"'\", \"'\\\"'\"];\n    var idx = quoteDepth * 2;\n    if (idx >= quotes.length) {\n        idx = quotes.length - 2;\n    }\n    if (!isOpening) {\n        ++idx;\n    }\n    return quotes[idx].replace(/^[\"']|[\"']$/g, '');\n};\n\nvar formatCounterValue = function formatCounterValue(counter, glue, format) {\n    var len = counter.length;\n    var result = '';\n\n    for (var i = 0; i < len; i++) {\n        if (i > 0) {\n            result += glue || '';\n        }\n        result += (0, _ListItem.createCounterText)(counter[i], (0, _listStyle.parseListStyleType)(format || 'decimal'), false);\n    }\n\n    return result;\n};"]},"metadata":{},"sourceType":"script"}