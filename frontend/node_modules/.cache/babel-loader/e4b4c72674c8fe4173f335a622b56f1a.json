{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseTextShadow = undefined;\n\nvar _Color = require('../Color');\n\nvar _Color2 = _interopRequireDefault(_Color);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar NUMBER = /^([+-]|\\d|\\.)$/i;\n\nvar parseTextShadow = exports.parseTextShadow = function parseTextShadow(textShadow) {\n  if (textShadow === 'none' || typeof textShadow !== 'string') {\n    return null;\n  }\n\n  var currentValue = '';\n  var isLength = false;\n  var values = [];\n  var shadows = [];\n  var numParens = 0;\n  var color = null;\n\n  var appendValue = function appendValue() {\n    if (currentValue.length) {\n      if (isLength) {\n        values.push(parseFloat(currentValue));\n      } else {\n        color = new _Color2.default(currentValue);\n      }\n    }\n\n    isLength = false;\n    currentValue = '';\n  };\n\n  var appendShadow = function appendShadow() {\n    if (values.length && color !== null) {\n      shadows.push({\n        color: color,\n        offsetX: values[0] || 0,\n        offsetY: values[1] || 0,\n        blur: values[2] || 0\n      });\n    }\n\n    values.splice(0, values.length);\n    color = null;\n  };\n\n  for (var i = 0; i < textShadow.length; i++) {\n    var c = textShadow[i];\n\n    switch (c) {\n      case '(':\n        currentValue += c;\n        numParens++;\n        break;\n\n      case ')':\n        currentValue += c;\n        numParens--;\n        break;\n\n      case ',':\n        if (numParens === 0) {\n          appendValue();\n          appendShadow();\n        } else {\n          currentValue += c;\n        }\n\n        break;\n\n      case ' ':\n        if (numParens === 0) {\n          appendValue();\n        } else {\n          currentValue += c;\n        }\n\n        break;\n\n      default:\n        if (currentValue.length === 0 && NUMBER.test(c)) {\n          isLength = true;\n        }\n\n        currentValue += c;\n    }\n  }\n\n  appendValue();\n  appendShadow();\n\n  if (shadows.length === 0) {\n    return null;\n  }\n\n  return shadows;\n};","map":{"version":3,"sources":["/Users/ChathushkaRodrigo/Desktop/ITP Project/ZooMelaka-Management-System/frontend/node_modules/react-to-pdf/node_modules/html2canvas/dist/npm/parsing/textShadow.js"],"names":["Object","defineProperty","exports","value","parseTextShadow","undefined","_Color","require","_Color2","_interopRequireDefault","obj","__esModule","default","NUMBER","textShadow","currentValue","isLength","values","shadows","numParens","color","appendValue","length","push","parseFloat","appendShadow","offsetX","offsetY","blur","splice","i","c","test"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.parseTextShadow = undefined;\n\nvar _Color = require('../Color');\n\nvar _Color2 = _interopRequireDefault(_Color);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NUMBER = /^([+-]|\\d|\\.)$/i;\n\nvar parseTextShadow = exports.parseTextShadow = function parseTextShadow(textShadow) {\n    if (textShadow === 'none' || typeof textShadow !== 'string') {\n        return null;\n    }\n\n    var currentValue = '';\n    var isLength = false;\n    var values = [];\n    var shadows = [];\n    var numParens = 0;\n    var color = null;\n\n    var appendValue = function appendValue() {\n        if (currentValue.length) {\n            if (isLength) {\n                values.push(parseFloat(currentValue));\n            } else {\n                color = new _Color2.default(currentValue);\n            }\n        }\n        isLength = false;\n        currentValue = '';\n    };\n\n    var appendShadow = function appendShadow() {\n        if (values.length && color !== null) {\n            shadows.push({\n                color: color,\n                offsetX: values[0] || 0,\n                offsetY: values[1] || 0,\n                blur: values[2] || 0\n            });\n        }\n        values.splice(0, values.length);\n        color = null;\n    };\n\n    for (var i = 0; i < textShadow.length; i++) {\n        var c = textShadow[i];\n        switch (c) {\n            case '(':\n                currentValue += c;\n                numParens++;\n                break;\n            case ')':\n                currentValue += c;\n                numParens--;\n                break;\n            case ',':\n                if (numParens === 0) {\n                    appendValue();\n                    appendShadow();\n                } else {\n                    currentValue += c;\n                }\n                break;\n            case ' ':\n                if (numParens === 0) {\n                    appendValue();\n                } else {\n                    currentValue += c;\n                }\n                break;\n            default:\n                if (currentValue.length === 0 && NUMBER.test(c)) {\n                    isLength = true;\n                }\n                currentValue += c;\n        }\n    }\n\n    appendValue();\n    appendShadow();\n\n    if (shadows.length === 0) {\n        return null;\n    }\n\n    return shadows;\n};"]},"metadata":{},"sourceType":"script"}